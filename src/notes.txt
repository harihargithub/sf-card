
https://ej2.syncfusion.com/react/demos/#/material3/card/vertical

https://ej2.syncfusion.com/react/documentation/card/style

https://www.syncfusion.com/account/my-profile

https://ej2.syncfusion.com/home/



Project structure to be as follows for npm start to work:
my-app
├── node_modules
├── public
│   ├── index.html
│   └── images (not here but @ src)
├── src
│   ├── App.js
│   ├── index.js
│   └── images
├── package.json
└── ...

Replaced Button with Anchor Tags as follows and it worked, pfa the screenshot and need to know all social media icons className please:


<div className="e-card-actions center">

    <button className="e-card-btn" title="E-mail">

        <a href="mailto:nharihar1@gmail.com">

            <span className="e-mail-icon cb-icons "></span>

        </a>

    </button>

    <button className="e-card-btn" title="LinkedIn">

        <a href="https://www.linkedin.com/in/harihar-nagarajan-452a6a1b/#">

            <span className="e-linkedin-icon cb-icons "></span>

        </a>

    </button>

    <button className="e-card-btn" title="Facebook">

        <a href="https://www.facebook.com/abjajaenterprises">

            <span className="e-fb-icon cb-icons "></span>

        </a>

    </button>

    <button className="e-card-btn" title="Twitter">

        <a href="https://twitter.com/nharihar1">

            <span className="e-twitter-icon cb-icons "></span>

        </a>

    </button>

</div>



       replaced with -



<div className="e-card-actions center">

                                    <a href="mailto:nharihar1@gmail.com" className="e-card-btn" title="E-mail">

                                        <span className="e-mail-icon cb-icons"></span>

                                    </a>

                                    <a href="https://www.linkedin.com/in/harihar-nagarajan-452a6a1b/#" className="e-card-btn" title="LinkedIn">

                                        <span className="e-google-icon cb-icons"></span>

                                    </a>

                                    <a href="https://www.facebook.com/abjajaenterprises" className="e-card-btn" title="Facebook">

                                        <span className="e-fb-icon cb-icons"></span>

                                    </a>

                                    <a href="https://twitter.com/nharihar1" className="e-card-btn" title="Twitter">

                                        <span className="e-tweet-icon cb-icons"></span>

                                    </a>

                                </div>



280624
To run this React stackblitz project on vs Coe , follow these steps:

stackblitz sf-card cloned @ vs code and to run process flow:(base) PS C:\Users\nhari\OneDrive\workspace-spring-tool-suite-4-4.19.0.RELEASE\ems_springboot_react_vite_mysql_sf\stackblitz nh sf card\sf-card> npm init -y
then npm install react react-dom   then npm install --save-dev @babel/core @babel/preset-env @babel/preset-react babel-loader  (Babel to transpile JSX and ES6 code to ES5) then npm install --save-dev webpack webpack-cli webpack-dev-server style-loader css-loader  (undle JavaScript files for use in a browser:)then npm install react-dom@next (react-dom client package)
then Create a .babelrc file in your project root with the following content:   (ref notes.txt from 280624)
{
    "presets": ["@babel/preset-env", "@babel/preset-react"]
}

then Create a webpack.config.js file in your project root with the following content: (ref notes.txt from 280624)
const path = require('path');
module.exports = {
    entry: './src/index.js',
    output: {
        path: path.resolve(__dirname, 'dist'),
        filename: 'bundle.js',
    },
    module: {
        rules: [
            {
                test: /\.js$/,
                exclude: /node_modules/,
                use: {
                    loader: 'babel-loader',
                },
            },
            {
                test: /\.css$/,
                use: ['style-loader', 'css-loader'],
            },
        ],
    },
    devServer: {
        static: {
            directory: path.join(__dirname, 'public'),
        },
        compress: true,
        port: 9000,
    },
};

Then npm start


Based on the shared code snippets, here's a breakdown of how these files work together in a React application:

nhcard.js: This file defines a React component named HariharNagarajanCard which represents a card layout for a person named Harihar Nagarajan. It also exports a function openCardInNewTab that renders this component to a string using renderToString from react-dom/server and opens it in a new browser tab.

index.js: This is the entry point of the React application. It imports the openCardInNewTab function from nhcard.js. The App component defined here renders a button that, when clicked, calls openCardInNewTab to open the Harihar Nagarajan card in a new tab. The App component is then rendered into a DOM element with the ID sample using React 18's createRoot API.

HTML file: This is the HTML template for the application. It includes links to external stylesheets and defines a div with the ID sample, which is the mount point for the React application defined in index.js. The body of the document applies the material3 class, suggesting the use of Material Design 3 CSS for styling.

Together, these files create a simple React application that displays a button. When the button is clicked, a new browser tab opens, displaying a card with information about Harihar Nagarajan. The application uses external styles from Syncfusion and Bootstrap for styling, and it's set up to be responsive and compatible with modern web standards.


